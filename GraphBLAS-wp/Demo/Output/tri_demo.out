--------------------------------------------------------------
Wathen: nx 4 ny 4 n 65 nz 817 method 0, time: 0.000 sec

total time to read A matrix:       0.000261 sec

n 65 # edges 376
U=triu(A) time:        0.000013 sec
read A, create U memory usage: 2.9505e-05 GB
L=tril(A) time:        0.000006 sec
# triangles 872

tricount time:         0.000037 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000031 sec
reduce (C) time:       0.000006 sec
rate       6.71 million edges/sec (incl time for U=triu(A))
rate      10.16 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 2.9984e-05 GB
tricount time:         0.000034 sec (outer product method)
tri+prep time:         0.000047 sec (incl time to compute U)
compute C time:        0.000030 sec
reduce (C) time:       0.000004 sec
rate       8.00 million edges/sec (incl time for U=triu(A))
rate      11.06 million edges/sec (just tricount itself)

tricount (outer) memory usage: 2.9505e-05 GB

--------------------------------------------------------------
random 5 by 5, nz: 16, method 1 time 0.000 sec

total time to read A matrix:       0.000101 sec

n 5 # edges 8
U=triu(A) time:        0.000013 sec
read A, create U memory usage: 1.408e-06 GB
L=tril(A) time:        0.000003 sec
# triangles 4

tricount time:         0.000040 sec (dot product method)
tri+prep time:         0.000056 sec (incl time to compute L and U)
compute C time:        0.000030 sec
reduce (C) time:       0.000010 sec
rate       0.14 million edges/sec (incl time for U=triu(A))
rate       0.20 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 1.568e-06 GB
tricount time:         0.000024 sec (outer product method)
tri+prep time:         0.000037 sec (incl time to compute U)
compute C time:        0.000023 sec
reduce (C) time:       0.000001 sec
rate       0.22 million edges/sec (incl time for U=triu(A))
rate       0.33 million edges/sec (just tricount itself)

tricount (outer) memory usage: 1.685e-06 GB

--------------------------------------------------------------
ntuples: 3
nrows 3 ncols 3
time to prune self-edges:     0.000002
time to build the graph with GrB_Matrix_build:     0.000047
make symmetric
A = (C+C')/2
A = (C+C')/2 time     0.000024
matrix 3 by 3, 0 entries, from stdin

total time to read A matrix:       0.000178 sec

n 3 # edges 0
U=triu(A) time:        0.000016 sec
read A, create U memory usage: 8.34e-07 GB
L=tril(A) time:        0.000002 sec
# triangles 0

tricount time:         0.000070 sec (dot product method)
tri+prep time:         0.000088 sec (incl time to compute L and U)
compute C time:        0.000042 sec
reduce (C) time:       0.000028 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 9.4e-07 GB
tricount time:         0.000038 sec (outer product method)
tri+prep time:         0.000054 sec (incl time to compute U)
compute C time:        0.000036 sec
reduce (C) time:       0.000002 sec
rate       0.00 million edges/sec (incl time for U=triu(A))
rate       0.00 million edges/sec (just tricount itself)

tricount (outer) memory usage: 1.153e-06 GB

--------------------------------------------------------------
ntuples: 8
nrows 4 ncols 4
time to prune self-edges:     0.000002
time to build the graph with GrB_Matrix_build:     0.000035
make symmetric
A = (C+C')/2
A = (C+C')/2 time     0.000031
matrix 4 by 4, 4 entries, from stdin

total time to read A matrix:       0.000149 sec

n 4 # edges 2
U=triu(A) time:        0.000006 sec
read A, create U memory usage: 1.033e-06 GB
L=tril(A) time:        0.000002 sec
# triangles 0

tricount time:         0.000018 sec (dot product method)
tri+prep time:         0.000026 sec (incl time to compute L and U)
compute C time:        0.000014 sec
reduce (C) time:       0.000004 sec
rate       0.08 million edges/sec (incl time for U=triu(A))
rate       0.11 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 1.145e-06 GB
tricount time:         0.000016 sec (outer product method)
tri+prep time:         0.000022 sec (incl time to compute U)
compute C time:        0.000014 sec
reduce (C) time:       0.000002 sec
rate       0.09 million edges/sec (incl time for U=triu(A))
rate       0.13 million edges/sec (just tricount itself)

tricount (outer) memory usage: 1.317e-06 GB

--------------------------------------------------------------
ntuples: 10
nrows 4 ncols 4
time to prune self-edges:     0.000001
time to build the graph with GrB_Matrix_build:     0.000035
make symmetric
A = (C+C')/2
A = (C+C')/2 time     0.000032
matrix 4 by 4, 10 entries, from stdin

total time to read A matrix:       0.000150 sec

n 4 # edges 5
U=triu(A) time:        0.000006 sec
read A, create U memory usage: 1.105e-06 GB
L=tril(A) time:        0.000003 sec
# triangles 2

tricount time:         0.000021 sec (dot product method)
tri+prep time:         0.000030 sec (incl time to compute L and U)
compute C time:        0.000016 sec
reduce (C) time:       0.000005 sec
rate       0.17 million edges/sec (incl time for U=triu(A))
rate       0.24 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 1.361e-06 GB
tricount time:         0.000015 sec (outer product method)
tri+prep time:         0.000021 sec (incl time to compute U)
compute C time:        0.000014 sec
reduce (C) time:       0.000001 sec
rate       0.24 million edges/sec (incl time for U=triu(A))
rate       0.33 million edges/sec (just tricount itself)

tricount (outer) memory usage: 1.473e-06 GB

--------------------------------------------------------------
ntuples: 8
nrows 4 ncols 3
time to prune self-edges:     0.000001
time to build the graph with GrB_Matrix_build:     0.000035
make symmetric
A = [0 C ; C' 0], a bipartite graph
time to construct augmented system:     0.000044
matrix 7 by 7, 16 entries, from stdin

total time to read A matrix:       0.000166 sec

n 7 # edges 8
U=triu(A) time:        0.000010 sec
read A, create U memory usage: 5.201e-06 GB
L=tril(A) time:        0.000004 sec
# triangles 0

tricount time:         0.000029 sec (dot product method)
tri+prep time:         0.000043 sec (incl time to compute L and U)
compute C time:        0.000022 sec
reduce (C) time:       0.000007 sec
rate       0.19 million edges/sec (incl time for U=triu(A))
rate       0.28 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 5.201e-06 GB
tricount time:         0.000019 sec (outer product method)
tri+prep time:         0.000029 sec (incl time to compute U)
compute C time:        0.000018 sec
reduce (C) time:       0.000001 sec
rate       0.28 million edges/sec (incl time for U=triu(A))
rate       0.42 million edges/sec (just tricount itself)

tricount (outer) memory usage: 5.201e-06 GB

--------------------------------------------------------------
ntuples: 438
nrows 219 ncols 85
time to prune self-edges:     0.000001
time to build the graph with GrB_Matrix_build:     0.000036
make symmetric
A = [0 C ; C' 0], a bipartite graph
time to construct augmented system:     0.000065
matrix 304 by 304, 876 entries, from stdin

total time to read A matrix:       0.000395 sec

n 304 # edges 438
U=triu(A) time:        0.000010 sec
read A, create U memory usage: 3.0745e-05 GB
L=tril(A) time:        0.000005 sec
# triangles 0

tricount time:         0.000027 sec (dot product method)
tri+prep time:         0.000042 sec (incl time to compute L and U)
compute C time:        0.000021 sec
reduce (C) time:       0.000006 sec
rate      10.43 million edges/sec (incl time for U=triu(A))
rate      16.22 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 4.3857e-05 GB
tricount time:         0.000036 sec (outer product method)
tri+prep time:         0.000046 sec (incl time to compute U)
compute C time:        0.000033 sec
reduce (C) time:       0.000003 sec
rate       9.52 million edges/sec (incl time for U=triu(A))
rate      12.17 million edges/sec (just tricount itself)

tricount (outer) memory usage: 4.5081e-05 GB

--------------------------------------------------------------
ntuples: 224
nrows 48 ncols 48
time to prune self-edges:     0.000000
time to build the graph with GrB_Matrix_build:     0.000031
make symmetric
A = (C+C')/2
A = (C+C')/2 time     0.000030
matrix 48 by 48, 352 entries, from stdin

total time to read A matrix:       0.000264 sec

n 48 # edges 176
U=triu(A) time:        0.000012 sec
read A, create U memory usage: 1.0657e-05 GB
L=tril(A) time:        0.000008 sec
# triangles 160

tricount time:         0.000043 sec (dot product method)
tri+prep time:         0.000063 sec (incl time to compute L and U)
compute C time:        0.000034 sec
reduce (C) time:       0.000009 sec
rate       2.79 million edges/sec (incl time for U=triu(A))
rate       4.09 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 1.5433e-05 GB
tricount time:         0.000030 sec (outer product method)
tri+prep time:         0.000042 sec (incl time to compute U)
compute C time:        0.000027 sec
reduce (C) time:       0.000003 sec
rate       4.19 million edges/sec (incl time for U=triu(A))
rate       5.87 million edges/sec (just tricount itself)

tricount (outer) memory usage: 1.353e-05 GB

--------------------------------------------------------------
ntuples: 147631
nrows 4884 ncols 4884
time to prune self-edges:     0.003612
time to build the graph with GrB_Matrix_build:     0.002998
make symmetric
A = (C+C')/2
A = (C+C')/2 time     0.002823
matrix 4884 by 4884, 285494 entries, from stdin

total time to read A matrix:       0.104883 sec

n 4884 # edges 142747
U=triu(A) time:        0.000979 sec
read A, create U memory usage: 0.00700882 GB
L=tril(A) time:        0.001514 sec
# triangles 1512964

tricount time:         0.015935 sec (dot product method)
tri+prep time:         0.018428 sec (incl time to compute L and U)
compute C time:        0.014677 sec
reduce (C) time:       0.001258 sec
rate       7.75 million edges/sec (incl time for U=triu(A))
rate       8.96 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 0.010474 GB
tricount time:         0.010620 sec (outer product method)
tri+prep time:         0.011599 sec (incl time to compute U)
compute C time:        0.009762 sec
reduce (C) time:       0.000858 sec
rate      12.31 million edges/sec (incl time for U=triu(A))
rate      13.44 million edges/sec (just tricount itself)

tricount (outer) memory usage: 0.00876607 GB

--------------------------------------------------------------
ntuples: 1069
nrows 183 ncols 183
time to prune self-edges:     0.000005
time to build the graph with GrB_Matrix_build:     0.000066
make symmetric
A = (C+C')/2
A = (C+C')/2 time     0.000069
matrix 183 by 183, 1402 entries, from stdin

total time to read A matrix:       0.000913 sec

n 183 # edges 701
U=triu(A) time:        0.000021 sec
read A, create U memory usage: 4.0177e-05 GB
L=tril(A) time:        0.000020 sec
# triangles 863

tricount time:         0.000093 sec (dot product method)
tri+prep time:         0.000134 sec (incl time to compute L and U)
compute C time:        0.000081 sec
reduce (C) time:       0.000012 sec
rate       5.23 million edges/sec (incl time for U=triu(A))
rate       7.54 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 5.8633e-05 GB
tricount time:         0.000053 sec (outer product method)
tri+prep time:         0.000074 sec (incl time to compute U)
compute C time:        0.000048 sec
reduce (C) time:       0.000005 sec
rate       9.47 million edges/sec (incl time for U=triu(A))
rate      13.23 million edges/sec (just tricount itself)

tricount (outer) memory usage: 5.0565e-05 GB

--------------------------------------------------------------
ntuples: 123
nrows 32 ncols 31
time to prune self-edges:     0.000000
time to build the graph with GrB_Matrix_build:     0.000036
make symmetric
A = [0 C ; C' 0], a bipartite graph
time to construct augmented system:     0.000052
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000231 sec

n 63 # edges 123
U=triu(A) time:        0.000011 sec
read A, create U memory usage: 8.391e-06 GB
L=tril(A) time:        0.000007 sec
# triangles 0

tricount time:         0.000031 sec (dot product method)
tri+prep time:         0.000049 sec (incl time to compute L and U)
compute C time:        0.000024 sec
reduce (C) time:       0.000007 sec
rate       2.51 million edges/sec (incl time for U=triu(A))
rate       3.97 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 1.1969e-05 GB
tricount time:         0.000022 sec (outer product method)
tri+prep time:         0.000033 sec (incl time to compute U)
compute C time:        0.000021 sec
reduce (C) time:       0.000001 sec
rate       3.73 million edges/sec (incl time for U=triu(A))
rate       5.59 million edges/sec (just tricount itself)

tricount (outer) memory usage: 1.1857e-05 GB

--------------------------------------------------------------
ntuples: 123
nrows 31 ncols 32
time to prune self-edges:     0.000000
time to build the graph with GrB_Matrix_build:     0.000053
make symmetric
A = [0 C ; C' 0], a bipartite graph
time to construct augmented system:     0.000052
matrix 63 by 63, 246 entries, from stdin

total time to read A matrix:       0.000249 sec

n 63 # edges 123
U=triu(A) time:        0.000011 sec
read A, create U memory usage: 8.383e-06 GB
L=tril(A) time:        0.000007 sec
# triangles 0

tricount time:         0.000029 sec (dot product method)
tri+prep time:         0.000047 sec (incl time to compute L and U)
compute C time:        0.000024 sec
reduce (C) time:       0.000005 sec
rate       2.62 million edges/sec (incl time for U=triu(A))
rate       4.24 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 1.1961e-05 GB
tricount time:         0.000021 sec (outer product method)
tri+prep time:         0.000032 sec (incl time to compute U)
compute C time:        0.000020 sec
reduce (C) time:       0.000001 sec
rate       3.84 million edges/sec (incl time for U=triu(A))
rate       5.86 million edges/sec (just tricount itself)

tricount (outer) memory usage: 1.1849e-05 GB

--------------------------------------------------------------
ntuples: 102
nrows 27 ncols 51
time to prune self-edges:     0.000001
time to build the graph with GrB_Matrix_build:     0.000031
make symmetric
A = [0 C ; C' 0], a bipartite graph
time to construct augmented system:     0.000043
matrix 78 by 78, 204 entries, from stdin

total time to read A matrix:       0.000207 sec

n 78 # edges 102
U=triu(A) time:        0.000011 sec
read A, create U memory usage: 8.213e-06 GB
L=tril(A) time:        0.000007 sec
# triangles 0

tricount time:         0.000030 sec (dot product method)
tri+prep time:         0.000048 sec (incl time to compute L and U)
compute C time:        0.000023 sec
reduce (C) time:       0.000007 sec
rate       2.12 million edges/sec (incl time for U=triu(A))
rate       3.40 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 1.0897e-05 GB
tricount time:         0.000025 sec (outer product method)
tri+prep time:         0.000036 sec (incl time to compute U)
compute C time:        0.000024 sec
reduce (C) time:       0.000001 sec
rate       2.83 million edges/sec (incl time for U=triu(A))
rate       4.08 million edges/sec (just tricount itself)

tricount (outer) memory usage: 1.1193e-05 GB

--------------------------------------------------------------
ntuples: 49920
nrows 492 ncols 490
time to prune self-edges:     0.000002
time to build the graph with GrB_Matrix_build:     0.000754
make symmetric
A = [0 C ; C' 0], a bipartite graph
time to construct augmented system:     0.005091
matrix 982 by 982, 99840 entries, from stdin

total time to read A matrix:       0.037856 sec

n 982 # edges 49920
U=triu(A) time:        0.000291 sec
read A, create U memory usage: 0.00270163 GB
L=tril(A) time:        0.000641 sec
# triangles 0

tricount time:         0.000330 sec (dot product method)
tri+prep time:         0.001262 sec (incl time to compute L and U)
compute C time:        0.000325 sec
reduce (C) time:       0.000005 sec
rate      39.56 million edges/sec (incl time for U=triu(A))
rate     151.27 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 0.00363044 GB
tricount time:         0.000191 sec (outer product method)
tri+prep time:         0.000482 sec (incl time to compute U)
compute C time:        0.000189 sec
reduce (C) time:       0.000002 sec
rate     103.57 million edges/sec (incl time for U=triu(A))
rate     261.36 million edges/sec (just tricount itself)

tricount (outer) memory usage: 0.00324666 GB

--------------------------------------------------------------
ntuples: 299
nrows 67 ncols 67
time to prune self-edges:     0.000001
time to build the graph with GrB_Matrix_build:     0.000050
make symmetric
A = (C+C')/2
A = (C+C')/2 time     0.000033
matrix 67 by 67, 574 entries, from stdin

total time to read A matrix:       0.000255 sec

n 67 # edges 287
U=triu(A) time:        0.000009 sec
read A, create U memory usage: 1.6593e-05 GB
L=tril(A) time:        0.000007 sec
# triangles 120

tricount time:         0.000031 sec (dot product method)
tri+prep time:         0.000047 sec (incl time to compute L and U)
compute C time:        0.000025 sec
reduce (C) time:       0.000006 sec
rate       6.11 million edges/sec (incl time for U=triu(A))
rate       9.26 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 2.4185e-05 GB
tricount time:         0.000022 sec (outer product method)
tri+prep time:         0.000031 sec (incl time to compute U)
compute C time:        0.000020 sec
reduce (C) time:       0.000002 sec
rate       9.26 million edges/sec (incl time for U=triu(A))
rate      13.05 million edges/sec (just tricount itself)

tricount (outer) memory usage: 2.0969e-05 GB

--------------------------------------------------------------
Wathen: nx 200 ny 200 n 120801 nz 1883201 method 0, time: 0.308 sec

total time to read A matrix:       0.367957 sec

n 120801 # edges 881200
U=triu(A) time:        0.010182 sec
read A, create U memory usage: 0.065216 GB
L=tril(A) time:        0.012222 sec
# triangles 2160400

tricount time:         0.035040 sec (dot product method)
tri+prep time:         0.057444 sec (incl time to compute L and U)
compute C time:        0.030684 sec
reduce (C) time:       0.004356 sec
rate      15.34 million edges/sec (incl time for U=triu(A))
rate      25.15 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 0.0673129 GB
tricount time:         0.018321 sec (outer product method)
tri+prep time:         0.028503 sec (incl time to compute U)
compute C time:        0.014007 sec
reduce (C) time:       0.004314 sec
rate      30.92 million edges/sec (incl time for U=triu(A))
rate      48.10 million edges/sec (just tricount itself)

tricount (outer) memory usage: 0.065216 GB

--------------------------------------------------------------
random 10000 by 10000, nz: 199746, method 0 time 0.039 sec

total time to read A matrix:       0.041646 sec

n 10000 # edges 99873
U=triu(A) time:        0.001691 sec
read A, create U memory usage: 0.00805162 GB
L=tril(A) time:        0.002014 sec
# triangles 1301

tricount time:         0.020875 sec (dot product method)
tri+prep time:         0.024580 sec (incl time to compute L and U)
compute C time:        0.020833 sec
reduce (C) time:       0.000042 sec
rate       4.06 million edges/sec (incl time for U=triu(A))
rate       4.78 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 0.00805162 GB
tricount time:         0.004295 sec (outer product method)
tri+prep time:         0.005986 sec (incl time to compute U)
compute C time:        0.004256 sec
reduce (C) time:       0.000039 sec
rate      16.68 million edges/sec (incl time for U=triu(A))
rate      23.25 million edges/sec (just tricount itself)

tricount (outer) memory usage: 0.00805162 GB

--------------------------------------------------------------
random 10000 by 10000, nz: 199746, method 1 time 0.032 sec

total time to read A matrix:       0.033590 sec

n 10000 # edges 99873
U=triu(A) time:        0.001373 sec
read A, create U memory usage: 0.00583355 GB
L=tril(A) time:        0.001344 sec
# triangles 1301

tricount time:         0.017314 sec (dot product method)
tri+prep time:         0.020031 sec (incl time to compute L and U)
compute C time:        0.017276 sec
reduce (C) time:       0.000038 sec
rate       4.99 million edges/sec (incl time for U=triu(A))
rate       5.77 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 0.00751169 GB
tricount time:         0.003868 sec (outer product method)
tri+prep time:         0.005241 sec (incl time to compute U)
compute C time:        0.003854 sec
reduce (C) time:       0.000014 sec
rate      19.06 million edges/sec (incl time for U=triu(A))
rate      25.82 million edges/sec (just tricount itself)

tricount (outer) memory usage: 0.00636337 GB

--------------------------------------------------------------
random 100000 by 100000, nz: 19979838, method 0 time 4.827 sec

total time to read A matrix:       5.023001 sec

n 100000 # edges 9989919
U=triu(A) time:        0.127310 sec
read A, create U memory usage: 0.966905 GB
L=tril(A) time:        0.135162 sec
# triangles 1328523

tricount time:        26.325303 sec (dot product method)
tri+prep time:        26.587775 sec (incl time to compute L and U)
compute C time:       26.316294 sec
reduce (C) time:       0.009009 sec
rate       0.38 million edges/sec (incl time for U=triu(A))
rate       0.38 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 0.966905 GB
tricount time:         2.857520 sec (outer product method)
tri+prep time:         2.984830 sec (incl time to compute U)
compute C time:        2.845165 sec
reduce (C) time:       0.012355 sec
rate       3.35 million edges/sec (incl time for U=triu(A))
rate       3.50 million edges/sec (just tricount itself)

tricount (outer) memory usage: 0.966905 GB

--------------------------------------------------------------
random 100000 by 100000, nz: 19979838, method 1 time 4.229 sec

total time to read A matrix:       4.429307 sec

n 100000 # edges 9989919
U=triu(A) time:        0.119248 sec
read A, create U memory usage: 0.561836 GB
L=tril(A) time:        0.132799 sec
# triangles 1328523

tricount time:        26.175215 sec (dot product method)
tri+prep time:        26.427262 sec (incl time to compute L and U)
compute C time:       26.167814 sec
reduce (C) time:       0.007401 sec
rate       0.38 million edges/sec (incl time for U=triu(A))
rate       0.38 million edges/sec (just tricount itself)

tricount (dot)   memory usage: 0.722475 GB
tricount time:         2.713645 sec (outer product method)
tri+prep time:         2.832893 sec (incl time to compute U)
compute C time:        2.702922 sec
reduce (C) time:       0.010723 sec
rate       3.53 million edges/sec (incl time for U=triu(A))
rate       3.68 million edges/sec (just tricount itself)

tricount (outer) memory usage: 0.603096 GB

